<?eclipse.ant.import?>
<project basedir="." name="gwt-rpc-plus" default="build">
	<property name="debuglevel" value="source,lines,vars" />
	<property name="target" value="1.5" />
	<property name="source" value="1.5" />

	<property name="output.dir" value="build" />
	<property name="dist.dir" value="${output.dir}/dist" />
	<property name="classes.dir" value="${output.dir}/bin/src" />
	<property name="classes.test.dir" value="${output.dir}/bin/test" />

	<!-- Determine platform for GWT (gwt-dev-*.jar) -->
	<condition property="gwt.platform" value="windows">
		<os family="windows" />
	</condition>
	<condition property="gwt.platform" value="mac">
		<os family="mac" />
	</condition>
	<condition property="gwt.platform" value="linux">
		<os family="unix" />
	</condition>


	<!-- .exe suffix for tools -->
	<condition property="exe.suffix" value=".exe">
		<os family="windows" />
	</condition>
	<condition property="exe.suffix" value=".osx">
		<os family="mac" />
	</condition>
	<condition property="exe.suffix" value=".linux.x86">
		<os family="unix" />
	</condition>


	<!-- GWT Java JVM args -->
	<condition property="gwt.jvm.args" value="-XstartOnFirstThread">
		<os family="mac" />
	</condition>
	<property name="gwt.jvm.args" value="-showversion" /> <!-- Need to use some sort of arg here to avoid Java barf -->


	<!-- GWT testing Java JVM -->
	<!-- OSX needs a 1.5 JVM to run tests in hosted mode -->
	<condition property="gwt.hosted.java.command" value="/System/Library/Frameworks/JavaVM.framework/Versions/1.5/Home/bin/java">
		<os family="mac" />
	</condition>
	<property name="gwt.hosted.java.command" value="java" />


	<fail unless="gwt.sdk.dir">Property gwt.sdk.dir must be set</fail>

	<tstamp />

	<target name="clean">
		<delete dir="${output.dir}" />
	</target>

	<target name="build" depends="compile,jar,compile-test,test">
	</target>

	<target name="compile" description="Generate .class files from .java files">
		<mkdir dir="${classes.dir}" />

		<javac debug="true" debuglevel="${debuglevel}" destdir="${classes.dir}" source="${source}" target="${target}">
			<src path="gwt" />
			<src path="server" />
			<src path="codegen" />
			<src path="gen" />
			<classpath>
				<fileset dir="lib">
					<include name="*.jar" />
				</fileset>
				<pathelement path="${gwt.sdk.dir}/gwt-user.jar" />
				<pathelement path="${gwt.sdk.dir}/gwt-dev-${gwt.platform}.jar" />
			</classpath>
		</javac>

		<!-- Ensure that all non-Java files are available in the classpath -->
		<copy todir="${classes.dir}">
			<fileset dir="server">
				<include name="**/*" />
				<exclude name="**/*.java" />
			</fileset>
			<fileset dir="gwt">
				<include name="**/*" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>

	<target name="compile-test" depends="compile" description="Generate .class files from .java files">
		<mkdir dir="${classes.test.dir}" />

		<javac debug="true" debuglevel="${debuglevel}" destdir="${classes.test.dir}" source="${source}" target="${target}">
			<src path="test/gwt-test" />
			<src path="test/server-test" />
			<src path="example/gwt-example" />
			<src path="example/server-example" />
			<src path="example/gen-java-gwt" />
			<src path="example/gen-javabean" />
			<src path="example/gen-json-server" />
			<classpath>
				<path location="${classes.dir}" />
				<fileset dir="lib">
					<include name="*.jar" />
				</fileset>
				<pathelement path="${gwt.sdk.dir}/gwt-user.jar" />
				<pathelement path="${gwt.sdk.dir}/gwt-dev-${gwt.platform}.jar" />
			</classpath>
		</javac>
		
		<copy todir="${classes.test.dir}">
			<fileset dir="test/gwt-test">
				<include name="**/*" />
				<exclude name="**/*.java" />
			</fileset>
			<fileset dir="test/server-test">
				<include name="**/*" />
				<exclude name="**/*.java" />
			</fileset>
			<fileset dir="example/gwt-example">
				<include name="**/*" />
				<exclude name="**/*.java" />
			</fileset>
			<fileset dir="example/server-example">
				<include name="**/*" />
				<exclude name="**/*.java" />
			</fileset>
			<fileset dir="example/gen-java-gwt">
				<include name="**/*" />
				<exclude name="**/*.java" />
			</fileset>
			<fileset dir="example/gen-javabean">
				<include name="**/*" />
				<exclude name="**/*.java" />
			</fileset>
			<fileset dir="example/gen-json-server">
				<include name="**/*" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>

	<target name="dist" depends="jar">
		<mkdir dir="${dist.dir}" />

		<zip destfile="${dist.dir}/gwt-rpc-plus-snapshot-${DSTAMP}.zip">
			<fileset dir="lib">
				<include name="*.jar" />
			</fileset>
			<fileset dir="build">
				<include name="*.jar" />
			</fileset>
		</zip>
		<zip destfile="${dist.dir}/gwt-rpc-plus-src-snapshot-${DSTAMP}.zip">
			<fileset dir=".">
				<include name="gwt/**/*.java" />
				<include name="codegen/**/*.java" />
				<include name="server/**/*.java" />
			</fileset>
		</zip>

		<copy file="build/gwt-rpc-plus.jar" tofile="${dist.dir}/gwt-rpc-plus-snapshot-${DSTAMP}.jar" />
	</target>

	<target name="jar" depends="compile">
		<jar destfile="build/gwt-rpc-plus.jar">
			<fileset dir="${classes.dir}">
				<include name="**/*.class" />
			</fileset>
			<fileset dir="gwt">
				<include name="**/*" />
			</fileset>
		</jar>
	</target>

	<target name="thrift" depends="compile,jar" description="Generate Java bindings for .thrift files">
		<delete>
			<fileset dir="example">
				<include name="**/gen-*/**/*.java" />
			</fileset>
		</delete>

		<exec executable="tools/thrift/thrift${exe.suffix}">
			<arg value="--gen" />
			<arg value="java:beans" />
			<arg value="-o" />
			<arg value="example" />
			<arg value="example/torturetest.thrift" />
		</exec>

		<java classname="com.dotspots.rpcplus.codegen.thrift.CodeGen" fork="true">
			<arg value="--client" />
			<arg value="--suffix" />
			<arg value=".client" />
			<arg value="--output" />
			<arg value="example/gen-java-gwt" />
			<arg value="--idl" />
			<arg value="example/torturetest.thrift" />
			<classpath>
				<fileset dir="build">
					<include name="*.jar" />
				</fileset>
				<fileset dir="lib">
					<include name="*.jar" />
				</fileset>
				<pathelement path="${gwt.sdk.dir}/gwt-user.jar" />
				<pathelement path="${gwt.sdk.dir}/gwt-dev-${gwt.platform}.jar" />
			</classpath>
		</java>

		<java classname="com.dotspots.rpcplus.codegen.thrift.CodeGen" fork="true">
			<arg value="--server" />
			<arg value="--output" />
			<arg value="example/gen-json-server" />
			<arg value="--idl" />
			<arg value="example/torturetest.thrift" />
			<classpath>
				<fileset dir="build">
					<include name="*.jar" />
				</fileset>
				<fileset dir="lib">
					<include name="*.jar" />
				</fileset>
				<pathelement path="${gwt.sdk.dir}/gwt-user.jar" />
				<pathelement path="${gwt.sdk.dir}/gwt-dev-${gwt.platform}.jar" />
			</classpath>
		</java>
	</target>

	<target name="test" depends="compile-test">
		<mkdir dir="${output.dir}/tests" />

		<property name="gwt.test.args" value="-notHeadless" />
		<echo>Running tests (${gwt.test.args})</echo>
		
		<junit printsummary="yes" showoutput="true" fork="true" timeout="600000" jvm="${gwt.hosted.java.command}">
			<jvmarg value="-Xmx1000M" />
			<jvmarg value="-server" />
			<jvmarg value="${gwt.jvm.args}" />

			<sysproperty key="gwt.args" value="${gwt.test.args} -ea -gen ${output.dir}/tests/gen -out ${output.dir}/tests/out" />

			<classpath>
				<path location="gwt" />
				<path location="test/gwt-test" />
				<path location="example/gwt-example" />
				<path location="example/gen-java-gwt" />
				<path location="example/gen-javabean" />
				<path location="example/gen-json-server" />
				
				<fileset dir="lib">
					<include name="*.jar" />
				</fileset>
				<pathelement path="${gwt.sdk.dir}/gwt-user.jar" />
				<pathelement path="${gwt.sdk.dir}/gwt-dev-${gwt.platform}.jar" />
				<path location="${classes.dir}" />
				<path location="${classes.test.dir}" />
			</classpath>

			<formatter type="xml" />
			<formatter type="plain" usefile="false" />

			<test todir="${output.dir}/tests" name="com.dotspots.rpcplus.test.client.TestFlexibleRPC" />
			<test todir="${output.dir}/tests" name="com.dotspots.rpcplus.test.client.TestFlexibleRPCCrossDomain" />
			<test todir="${output.dir}/tests" name="com.dotspots.rpcplus.test.client.TestJsonTransport" />
			<test todir="${output.dir}/tests" name="com.dotspots.rpcplus.test.client.TestThriftRPC" />
			<test todir="${output.dir}/tests" name="com.dotspots.rpcplus.test.client.TestThriftCollections" />
		</junit>
	</target>
</project>
