= Getting Started With Thrift =

gwt-rpc-plus includes an optimized compiler for thrift files that can output JSNI stubs for client-side use, as well as the corresponding server-side stubs.  The client and server stub generators are included in gwt-rpc-plus.jar as the main class.

The current approach in gwt-rpc-plus trades portability of client/server source for low code footprint on the client. 

== Getting Help ==

You can run the compiler with no arguments to get a list of possible command-line arguments.

{{{
$ java -jar build/gwt-rpc-plus.jar 
gwt-rpc-plus Thrift Compiler: http://code.google.com/p/gwt-rpc-plus/

usage: com.dotspots.rpcplus.codegen.thrift.CodeGen [-idldir <arg>]
       [-client] [-server] [-output <arg>] [-suffix <arg>] [-include <arg>] [-idl
       <arg>]
 -client          Generate client code
 -idl <arg>       IDL file
 -idldir <arg>    IDL directory
 -include <arg>   Include directories
 -output <arg>    Output directory
 -server          Generate server code
 -suffix <arg>    Package suffix
}}}

== Compiling IDL ==

For each .thrift IDL, you'll need to perform three compilation passes

 # Compile the IDL with the native Thrift client (statically-linked executables for Linux/x86 and OSX are available in SVN)
 # Generate the client-side JSNI stubs with gwt-rpc-plus
 # Generate the server-side RPC stub with gwt-rpc-plus

=== Generating the server-side beans ===

The following command will generate the server-side Java beans:

{{{
thrift --gen java:beans -o example example.thrift
}}}

=== Generate the client-side JSNI objects and RPC stubs ===

The following command will generate the client-side JSNI objects, as well as the RPC stubs:

{{{
java -jar gwt-rpc-plus.jar --client --output example/gen-java-gwt example.thrift
}}}

If you are generating client stubs that will live in the same project as your server stubs, you may wish to use a package suffix for these:

{{{
java -jar gwt-rpc-plus.jar --client --suffix .client --output example/gen-java-gwt example.thrift
}}}

=== Generate the server-side RPC handler ===

The following command will generate the server-side RPC handler:

{{{
java -jar gwt-rpc-plus.jar --server --output example/gen-json-server example.thrift
}}}