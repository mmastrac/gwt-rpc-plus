// AUTOGENERATED: See com.dotspots.rpcplus.codegen.jscollections.CollectionGen for more details
package com.dotspots.rpcplus.client.jscollections;

import com.google.gwt.core.client.JavaScriptObject;
import com.google.gwt.core.client.GWT;
import com.google.gwt.lang.LongLib;

@SuppressWarnings("unused")
public final class JsRpcListInt extends JavaScriptObject {
    protected JsRpcListInt() {
    }

    public static JsRpcListInt create() {
        return JavaScriptObject.createArray().cast();
    }

    public native boolean contains(int idx) /*-{
        return this.hasOwnProperty(idx);
    }-*/;

    public native int size() /*-{
        return this.length;
    }-*/;

    public native boolean isEmpty() /*-{
        return !this.length;
    }-*/;

    public native void remove(int idx) /*-{
        this.splice(idx, 1);
    }-*/;

    public native boolean forEach(JsRpcIntProcedure procedure) /*-{
        for (var i = 0; i < this.length; i++) { 
            if (!procedure.@com.dotspots.rpcplus.client.jscollections.JsRpcIntProcedure::execute(I)(this[i])) return false;
        }
        return true;
    }-*/;

    public native boolean forEach(JsRpcIntIntProcedure procedure) /*-{
        for (var i = 0; i < this.length; i++) { 
            if (!procedure.@com.dotspots.rpcplus.client.jscollections.JsRpcIntIntProcedure::execute(II)(i, this[i])) return false;
        }
        return true;
    }-*/;

    public native int get(int idx) /*-{
        return this[idx] || 0;
    }-*/;

    public native void set(int idx, int value) /*-{
        this[idx] = value;
    }-*/;

    public native void add(int value) /*-{
        this.push(value);
    }-*/;

    public native void pop() /*-{
        this.pop();
    }-*/;

    public int peek() {
        return this.get(this.size() - 1);
    };

    public native String join(String separator) /*-{
        return this.join(separator);
    }-*/;

    public native JsRpcListInt slice(int index) /*-{
        return this.slice(index);
    }-*/;

    public native JsRpcListInt slice(int from, int to) /*-{
        return this.slice(from, to);
    }-*/;

    public native JsRpcListInt clear() /*-{
        this.splice(0, this.length);
    }-*/;

    public native JsRpcListInt splice(int index) /*-{
        return this.splice(index, this.length);
    }-*/;

    public native JsRpcListInt splice(int index, int howMany) /*-{
        return this.splice(index, howMany);
    }-*/;

}
